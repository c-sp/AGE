image: registry.gitlab.com/csprenger/docker-age-ci:latest

stages:
    - build
    - test
    - deploy



############################################################
##
##   common definitions
##
############################################################

# Build artifacts in './build/artifacts' are ignored by git (see .gitignore).
# Unfortunately because of that they cannot be used as GitLab CI artifacts.
# We thus change the artifacts path for GitLab CI jobs by setting
# AGE_ARTIFACT_SUBDIR which is evaluated by the age_ci.sh script.

variables:
    ARTIFACTS_SUBDIR: ci_artifacts

before_script:
    - export AGE_ARTIFACTS_SUBDIR=${ARTIFACTS_SUBDIR} # evaluated by age_ci.sh

.artifacts: &artifacts
    artifacts:
        expire_in: 30 mins
        paths:
            - build/${ARTIFACTS_SUBDIR}
    tags:
        - linux

# All AGE-JS jobs are configured to cache the node_modules.
# Jobs of each branch use the same cache (see cache key).
#
# The GitLab.com shared runners use distributed caches:
# https://docs.gitlab.com/ee/ci/caching/#good-caching-practices

.age-js-common: &age-js-common
    image: registry.gitlab.com/csprenger/docker-age-ci/js:latest
    cache:
        key: ${CI_COMMIT_REF_SLUG}
        paths:
            - src/age_js/node_modules
    tags:
        - linux



############################################################
##
##   build
##
############################################################

.build-qt: &build-qt
    stage: build
    image: registry.gitlab.com/csprenger/docker-qt-gcc:5.10.r1
    <<: *artifacts
    script:
        - ./build/age_ci.sh qt ${BUILD_TYPE}

build-qt-debug:
    <<: *build-qt
    variables:
        BUILD_TYPE: debug

build-qt-release:
    <<: *build-qt
    variables:
        BUILD_TYPE: release


build-wasm:
    stage: build
    <<: *artifacts
    image: registry.gitlab.com/csprenger/docker-age-ci/wasm:latest
    script:
        - source "${REPO_EMSDK}/emsdk_env.sh"
        - ./build/age_ci.sh wasm Release

build-js:
    stage: build
    <<: *artifacts
    <<: *age-js-common
    script:
        - build/age_ci.sh js build



############################################################
##
##   test
##
############################################################

.test-release: &test-release
    stage: test
    dependencies:
        - build-qt-release

.test-debug: &test-debug
    stage: test
    dependencies:
        - build-qt-debug

.tests-mooneye: &tests-mooneye
    script:
        - ./build/age_ci.sh test mooneye "${GB_REPO_MOONEYE_GB}/tests/build"

.tests-gambatte: &tests-gambatte
    script:
        - ./build/age_ci.sh test gambatte "${GB_REPO_GAMBATTE}/test/hwtests"


test-mooneye-release:
    <<: *test-release
    <<: *tests-mooneye

test-mooneye-debug:
    <<: *test-debug
    <<: *tests-mooneye

test-gambatte-release:
    <<: *test-release
    <<: *tests-gambatte

# gambatte tests run for longer than 10 minutes with the debug build
#test-gambatte-debug:
#    <<: *test-debug
#    <<: *tests-gambatte


lint-age-js:
    stage: test
    <<: *age-js-common
    script:
        - build/age_ci.sh js lint
    # don't download any artifacts
    dependencies: []



############################################################
##
##   deploy
##
############################################################

pages:
    stage: deploy
    image: alpine:3.7
    dependencies:
        - build-wasm
        - build-js
    variables:
        PAGES_OUT: public
    script:
        - build/age_ci.sh pages "${PAGES_OUT}"
        - ls -lsahR "${PAGES_OUT}"
    artifacts:
        expire_in: 30 mins
        paths:
            - ${PAGES_OUT}
    tags:
        - linux
# TODO uncomment before merge!
#    only:
#        master
