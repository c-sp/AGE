name: AGE CI

on: push

env:
  ARTIFACT_NAME: age-artifacts
  ARTIFACT_PATH: build/artifacts

jobs:

  ###############################################################################
  ##
  ##   build
  ##
  ###############################################################################

  build-qt:
    name: build Qt applications
    runs-on: ubuntu-20.04
    steps:
      # https://github.com/jurplel/install-qt-action
      - name: cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-Qt-cache-5.12.8

      - name: install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.12.8'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: checkout code
        uses: actions/checkout@v2

      - name: build AGE
        run: build/age_ci.sh build-qt release

      - name: upload Qt artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}


  build-tester:
    name: build tester binary
    runs-on: ubuntu-20.04
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: build binaries
        run: build/age_ci.sh build-tester Release

      - name: upload tester artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}


  build-wasm:
    name: build WebAssembly binary
    runs-on: ubuntu-20.04
    container:
      image: emscripten/emsdk:2.0.7
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: build binaries
        run: build/age_ci.sh build-wasm Release

      - name: upload WebAssembly artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}


  ###############################################################################
  ##
  ##   test
  ##
  ###############################################################################

#  test-blargg:
#    name: run Blargg's test suite
#    runs-on: ubuntu-20.04
#    needs: [build-qt]
#    steps:
##      - name: install Qt libraries
##        run: |
##          sudo apt-get update
##          sudo apt-get install libqt5core5a libqt5gui5
#      - name: cache Qt
#        id: cache-qt
#        uses: actions/cache@v1
#        with:
#          path: ../Qt
#          key: ${{ runner.os }}-Qt-cache-5.12.8
#
#      - name: install Qt
#        uses: jurplel/install-qt-action@v2
#        with:
#          version: '5.12.8'
#          cached: ${{ steps.cache-qt.outputs.cache-hit }}
#
#      - name: checkout code
#        uses: actions/checkout@v2
#
#      - name: download artifacts
#        uses: actions/download-artifact@v1
#        with:
#          name: ${{ env.ARTIFACT_NAME }}
#          path: ${{ env.ARTIFACT_PATH }}
#
#      - name: run tests
#        run: build/age_ci.sh test blargg


  test-gambatte:
    name: run Gambatte test suite
    runs-on: ubuntu-20.04
    needs: [build-tester]
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: download artifacts
        uses: actions/download-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: run tests
        run: build/age_ci.sh run-tests gambatte


  test-mooneye-gb:
    name: run Mooneye GB test suite
    runs-on: ubuntu-20.04
    needs: [build-tester]
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: download artifacts
        uses: actions/download-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: run tests
        run: build/age_ci.sh run-tests mooneye-gb
