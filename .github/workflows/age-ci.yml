name: AGE CI

on: push

env:
  ARTIFACT_NAME: age-artifacts
  ARTIFACT_PATH: build/artifacts

jobs:
  #
  # Ubuntu, Qt & install-qt-action
  #
  # Ubuntu 18.04 comes with Qt 5.9.5 libraries
  # e.g. https://packages.ubuntu.com/bionic/libqt5core5a
  #
  # Ubuntu 20.04 comes with Qt 5.12.8 libraries
  # e.g. https://packages.ubuntu.com/focal/libqt5core5a
  #
  # install-qt-action v2.7.0 installs Qt 5.12.9 by default
  # https://github.com/jurplel/install-qt-action/releases/tag/v2.7.0
  #
  #  => use Ubuntu 20.04 for more recent Qt version,
  #     & install compatible Qt version with install-qt-action
  #


  ###############################################################################
  ##
  ##   build
  ##
  ###############################################################################

  build-qt:
    name: build Qt applications
    runs-on: ubuntu-20.04
    steps:
      # https://github.com/jurplel/install-qt-action
      - name: cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-Qt-cache-5.12.8

      - name: install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.12.8'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: checkout code
        uses: actions/checkout@v2

      - name: build AGE
        run: build/age_ci.sh qt release

      - name: upload Qt artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}


  build-wasm:
    name: build WebAssembly binaries
    runs-on: ubuntu-20.04
    container:
      image: trzeci/emscripten:1.39.17-upstream
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: build binaries
        run: build/age_ci.sh wasm Release

      - name: upload WebAssembly artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}


  build-js:
    name: build Web App
    runs-on: ubuntu-20.04
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: npm cache
        id: cache-npm
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('src/age_js/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: build Web App
        run: build/age_ci.sh js build --progress=false --base-href /AGE/

      - name: upload JavaScript artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}


  ###############################################################################
  ##
  ##   test
  ##
  ###############################################################################

  test-blargg:
    name: run Blargg's test suite
    runs-on: ubuntu-20.04
    needs: [build-qt]
    steps:
#      - name: install Qt libraries
#        run: |
#          sudo apt-get update
#          sudo apt-get install libqt5core5a libqt5gui5
      - name: cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-Qt-cache-5.12.8

      - name: install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.12.8'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: checkout code
        uses: actions/checkout@v2

      - name: download artifacts
        uses: actions/download-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: run tests
        run: build/age_ci.sh test blargg


  test-gambatte:
    name: run Gambatte test suite
    runs-on: ubuntu-20.04
    needs: [build-qt]
    steps:
#      - name: install Qt libraries
#        run: |
#          sudo apt-get update
#          sudo apt-get install libqt5core5a libqt5gui5
      - name: cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-Qt-cache-5.12.8

      - name: install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.12.8'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: checkout code
        uses: actions/checkout@v2

      - name: download artifacts
        uses: actions/download-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: run tests
        run: build/age_ci.sh test gambatte


  test-mooneye-gb:
    name: run Mooneye GB test suite
    runs-on: ubuntu-20.04
    needs: [build-qt]
    steps:
#      - name: install Qt libraries
#        run: |
#          sudo apt-get update
#          sudo apt-get install libqt5core5a libqt5gui5
      - name: cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-Qt-cache-5.12.8

      - name: install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.12.8'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: checkout code
        uses: actions/checkout@v2

      - name: download artifacts
        uses: actions/download-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: run tests
        run: build/age_ci.sh test mooneye-gb


  ###############################################################################
  ##
  ##   deploy
  ##
  ###############################################################################

  deploy-pwa:
    name: deploy AGE PWA
    runs-on: ubuntu-20.04
    needs: [build-js, build-wasm]
    steps:
      - name: checkout
        # https://github.com/marketplace/actions/deploy-to-github-pages
        # If you're using actions/checkout@v2 you must set persist-credentials
        # to false in most cases for the deployment to work correctly.
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: gh-pages target folder
        id: target-folder
        env:
          REF: ${{ github.ref }}
        run: |
          if [ $REF == 'refs/heads/master' ]
          then
            echo "::set-output name=target_folder::"
          else
            echo "::set-output name=target_folder::$REF"
          fi

      - name: download artifacts
        uses: actions/download-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: deploy PWA
        uses: JamesIves/github-pages-deploy-action@3.5.9
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: build/artifacts/pwa
          TARGET_FOLDER: ${{ steps.target-folder.outputs.target_folder }}
          CLEAN: true
          CLEAN_EXCLUDE: '["refs"]'
